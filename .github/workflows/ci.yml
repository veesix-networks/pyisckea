name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI
on:
  release:
    types: [created]

jobs:
  lint:
    name: Lint and Check Format
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/ruff-action@v3
      with:
        src: "./pykeadhcp"
    - uses: astral-sh/ruff-action@v3
      with:
        args: "format --check --diff"
        src: "./pykeadhcp"

  #test:
  #  name: Run tests
  #  runs-on: ubuntu-latest
  #
  #  steps:
  #  - uses: actions/checkout@v4
  #    with:
  #      persist-credentials: false
  #  - name: Set up Python
  #    uses: actions/setup-python@v5
  #    with:
  #      python-version: "3.12"
  #  - name: Ruff Check
  #    uses: jpetrucciani/ruff-check@main
  #    with:
  #      path: 'cgn_ec/'
  #  - name: Test with pytest
  #    run: |
  #      pip install pytest pytest-cov
  #      pytest tests/ --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-
          
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/') && github.event.release.prerelease == false
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cgn-ec
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    if: startsWith(github.ref, 'refs/tags/') && github.event.release.prerelease == true
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/cgn-ec

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/